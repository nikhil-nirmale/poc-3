#Githubaction Pipeline, so change microservices will deploy automatically

name: Deploy Flask Services  # Name shown in GitHub Actions UI for this workflow

on:
  push:
    branches: [main]  # Trigger this workflow only when code is pushed to the 'main' branch
  workflow_dispatch:  # Allow manual trigger from the GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for executing this job
    environment:
      name: production  # Environment that requires manual approval before execution

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Step to clone your GitHub repository into the runner
        with:
          fetch-depth: 2  # Fetch the last two commits to compare changes (used in git diff)

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2  # Authenticates GitHub runner with Google Cloud
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'  # Uses service account key stored as a GitHub Secret

      - name: Configure Docker to use GCP Artifact Registry
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet  
          # Configures Docker to authenticate with GCP Artifact Registry
          # This allows Docker to push images to the specified regional registry by using the GCP credentials authenticated earlier

      - name: Detect changed service directories
        id: detect
        run: |
          echo "CHANGED_DIRS=$(git diff --name-only HEAD^ HEAD | grep '^s-' | cut -d/ -f1 | sort -u | tr '\n' ' ')" >> $GITHUB_ENV
          # Uses git diff to find which top-level service folders (s-1, s-2, etc.) had changes in the last commit
          # Extracts only the service folder names, deduplicates them, and sets them in the GitHub environment variable CHANGED_DIRS

      - name: Build and push Docker images for changed services
        run: |
          for dir in $CHANGED_DIRS; do
            echo "ðŸš€ Building and pushing: $dir"
            cd $dir  # Enter the changed directory
            docker build -t europe-west1-docker.pkg.dev/poc-setup-462605/poc-docker-repo/$dir:latest .  # Build Docker image
            docker push europe-west1-docker.pkg.dev/poc-setup-462605/poc-docker-repo/$dir:latest  # Push to Artifact Registry
            cd ..  # Return to the root directory
